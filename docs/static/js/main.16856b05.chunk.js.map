{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OAEI,0BAAMC,SAZW,SAACC,GAElBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACzCN,EAAc,OAQf,2BACKO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,YAwBhCZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,Y,2BC9BjBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAWH,GAH/C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCDXO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GACFH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDb2BK,CAAc1B,GAAnCa,EAFwB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,oCACA,wBAAIJ,UAAU,qCAAd,IAAoDhB,EAApD,KACEoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAMjB,EAAIC,IACLD,UEdhBkB,EAAe,WAAO,IAAD,EAEO9C,mBAAS,CAAC,cAFjB,mBAEtB+C,EAFsB,KAEVhD,EAFU,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BACA,4BAEQgD,EAAWpB,KAAK,SAAAT,GAAQ,OACxB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAWA,U,YCV/B8B,IAASC,OAEL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.16856b05.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats =>  [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n    \r\n        <form onSubmit= { handleSubmit }>\r\n           <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n    export const getGifs = async( category ) => {\r\n\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Up9fAdUQvjXsRZs4Vv50OiADN5H5HBR1` ;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                        />\r\n                    )\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                 setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n     const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                    <GifGrid\r\n                    key={category}\r\n                    category={ category }\r\n                    />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\nimport '../node_modules/animate.css'\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}